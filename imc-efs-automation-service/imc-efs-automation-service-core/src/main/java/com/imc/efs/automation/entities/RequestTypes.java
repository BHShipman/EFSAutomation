package com.imc.efs.automation.entities;

// Generated Mar 16, 2015 4:02:11 PM by Hibernate Tools 4.0.0

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * RequestTypes generated by hbm2java
 */
@Entity
@Table(name = "RequestTypes", schema = "dbo", catalog = "EfsAutomation")
public class RequestTypes implements Serializable {

	private int requestTypeId;
	private boolean isOpsPortalType;
	private boolean isDriverPay;
	private boolean requiresManagementApproval;
	private boolean requiresAuthorizedVendor;
	private boolean requiresInvoice;
	private boolean preventDuplicates;
	private long dexProjectId;
	private String issuanceDebit;
	private String issuanceCredit;
	private String expenseDebit;
	private String expenseCredit;
	private String name;
	private RequestTypeConfigs requestTypeConfigs;
	private Set<Requesters> requesterses = new HashSet<Requesters>(0);
	private Set<Requests> requestses = new HashSet<Requests>(0);
	private Set<RequestTypeComments> requestTypeCommentses = new HashSet<RequestTypeComments>(
			0);

	public RequestTypes() {
	}

	public RequestTypes(int requestTypeId, boolean isOpsPortalType,
			boolean isDriverPay, boolean requiresManagementApproval,
			boolean requiresAuthorizedVendor, boolean requiresInvoice,
			boolean preventDuplicates, long dexProjectId,
			String issuanceDebit, String issuanceCredit,
			String name) {
		this.requestTypeId = requestTypeId;
		this.isOpsPortalType = isOpsPortalType;
		this.isDriverPay = isDriverPay;
		this.requiresManagementApproval = requiresManagementApproval;
		this.requiresAuthorizedVendor = requiresAuthorizedVendor;
		this.requiresInvoice = requiresInvoice;
		this.preventDuplicates = preventDuplicates;
		this.dexProjectId = dexProjectId;
		this.issuanceDebit = issuanceDebit;
		this.issuanceCredit = issuanceCredit;
		this.name = name;
	}

	public RequestTypes(int requestTypeId, boolean isOpsPortalType,
			boolean isDriverPay, boolean requiresManagementApproval,
			boolean requiresAuthorizedVendor, boolean requiresInvoice,
			boolean preventDuplicates, long dexProjectId,
			String issuanceDebit, String issuanceCredit,
			String expenseDebit, String expenseCredit,
			String name, RequestTypeConfigs requestTypeConfigs,
			Set<Requesters> requesterses, Set<Requests> requestses,
			Set<RequestTypeComments> requestTypeCommentses) {
		this.requestTypeId = requestTypeId;
		this.isOpsPortalType = isOpsPortalType;
		this.isDriverPay = isDriverPay;
		this.requiresManagementApproval = requiresManagementApproval;
		this.requiresAuthorizedVendor = requiresAuthorizedVendor;
		this.requiresInvoice = requiresInvoice;
		this.preventDuplicates = preventDuplicates;
		this.dexProjectId = dexProjectId;
		this.issuanceDebit = issuanceDebit;
		this.issuanceCredit = issuanceCredit;
		this.expenseDebit = expenseDebit;
		this.expenseCredit = expenseCredit;
		this.name = name;
		this.requestTypeConfigs = requestTypeConfigs;
		this.requesterses = requesterses;
		this.requestses = requestses;
		this.requestTypeCommentses = requestTypeCommentses;
	}

	@Id
	@Column(name = "RequestTypeId", unique = true, nullable = false)
	public int getRequestTypeId() {
		return this.requestTypeId;
	}

	public void setRequestTypeId(int requestTypeId) {
		this.requestTypeId = requestTypeId;
	}

	@Column(name = "IsOpsPortalType", nullable = false)
	public boolean isIsOpsPortalType() {
		return this.isOpsPortalType;
	}

	public void setIsOpsPortalType(boolean isOpsPortalType) {
		this.isOpsPortalType = isOpsPortalType;
	}

	@Column(name = "IsDriverPay", nullable = false)
	public boolean isIsDriverPay() {
		return this.isDriverPay;
	}

	public void setIsDriverPay(boolean isDriverPay) {
		this.isDriverPay = isDriverPay;
	}

	@Column(name = "RequiresManagementApproval", nullable = false)
	public boolean isRequiresManagementApproval() {
		return this.requiresManagementApproval;
	}

	public void setRequiresManagementApproval(boolean requiresManagementApproval) {
		this.requiresManagementApproval = requiresManagementApproval;
	}

	@Column(name = "RequiresAuthorizedVendor", nullable = false)
	public boolean isRequiresAuthorizedVendor() {
		return this.requiresAuthorizedVendor;
	}

	public void setRequiresAuthorizedVendor(boolean requiresAuthorizedVendor) {
		this.requiresAuthorizedVendor = requiresAuthorizedVendor;
	}

	@Column(name = "RequiresInvoice", nullable = false)
	public boolean isRequiresInvoice() {
		return this.requiresInvoice;
	}

	public void setRequiresInvoice(boolean requiresInvoice) {
		this.requiresInvoice = requiresInvoice;
	}

	@Column(name = "PreventDuplicates", nullable = false)
	public boolean isPreventDuplicates() {
		return this.preventDuplicates;
	}

	public void setPreventDuplicates(boolean preventDuplicates) {
		this.preventDuplicates = preventDuplicates;
	}

	@Column(name = "DexProjectId", nullable = false)
	public long getDexProjectId() {
		return this.dexProjectId;
	}

	public void setDexProjectId(long dexProjectId) {
		this.dexProjectId = dexProjectId;
	}

	@Column(name = "IssuanceDebit", nullable = false)
	public String getIssuanceDebit() {
		return this.issuanceDebit;
	}

	public void setIssuanceDebit(String issuanceDebit) {
		this.issuanceDebit = issuanceDebit;
	}

	@Column(name = "IssuanceCredit", nullable = false)
	public String getIssuanceCredit() {
		return this.issuanceCredit;
	}

	public void setIssuanceCredit(String issuanceCredit) {
		this.issuanceCredit = issuanceCredit;
	}

	@Column(name = "ExpenseDebit")
	public String getExpenseDebit() {
		return this.expenseDebit;
	}

	public void setExpenseDebit(String expenseDebit) {
		this.expenseDebit = expenseDebit;
	}

	@Column(name = "ExpenseCredit")
	public String getExpenseCredit() {
		return this.expenseCredit;
	}

	public void setExpenseCredit(String expenseCredit) {
		this.expenseCredit = expenseCredit;
	}

	@Column(name = "Name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "requestTypes")
	public RequestTypeConfigs getRequestTypeConfigs() {
		return this.requestTypeConfigs;
	}

	public void setRequestTypeConfigs(RequestTypeConfigs requestTypeConfigs) {
		this.requestTypeConfigs = requestTypeConfigs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "requestTypes")
	public Set<Requesters> getRequesterses() {
		return this.requesterses;
	}

	public void setRequesterses(Set<Requesters> requesterses) {
		this.requesterses = requesterses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "requestTypes")
	public Set<Requests> getRequestses() {
		return this.requestses;
	}

	public void setRequestses(Set<Requests> requestses) {
		this.requestses = requestses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "requestTypes")
	public Set<RequestTypeComments> getRequestTypeCommentses() {
		return this.requestTypeCommentses;
	}

	public void setRequestTypeCommentses(
			Set<RequestTypeComments> requestTypeCommentses) {
		this.requestTypeCommentses = requestTypeCommentses;
	}

}
